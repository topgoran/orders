// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrdersApp.Data.DataAccess;

namespace OrdersApp.Data.Migrations
{
    [DbContext(typeof(OrdersContext))]
    [Migration("20210503145106_createMigration")]
    partial class createMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.5");

            modelBuilder.Entity("OrdersApp.Data.Models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CoverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b7bee8b9-a9e1-4ea3-8342-8d4b2c535959"),
                            CoverId = 3,
                            Description = "This is article 1",
                            ImageId = 3,
                            Name = "Article 1",
                            Price = 30.5m
                        },
                        new
                        {
                            Id = new Guid("4a28ecaf-47f2-402d-9b8d-27219ac807eb"),
                            CoverId = 4,
                            Description = "This is article 2",
                            ImageId = 4,
                            Name = "Article 2",
                            Price = 34.5m
                        });
                });

            modelBuilder.Entity("OrdersApp.Data.Models.Menu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CoverId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("ImageId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = new Guid("672f99d6-8122-40cb-8c06-f7520ed587e9"),
                            CoverId = 1,
                            Description = "This is a menu 1",
                            ImageId = 1,
                            Name = "Menu 1"
                        },
                        new
                        {
                            Id = new Guid("10a28caf-40f3-4869-9fb8-a136955cd057"),
                            CoverId = 2,
                            Description = "This is a menu 2",
                            ImageId = 2,
                            Name = "Menu 2"
                        });
                });

            modelBuilder.Entity("OrdersApp.Data.Models.MenuItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MenuId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("97509034-2da9-41e6-8229-c2221ae2882d"),
                            ArticleId = new Guid("b7bee8b9-a9e1-4ea3-8342-8d4b2c535959"),
                            MenuId = new Guid("672f99d6-8122-40cb-8c06-f7520ed587e9")
                        },
                        new
                        {
                            Id = new Guid("0c67489b-e8f0-4d32-8815-b2e05e0d8abd"),
                            ArticleId = new Guid("4a28ecaf-47f2-402d-9b8d-27219ac807eb"),
                            MenuId = new Guid("10a28caf-40f3-4869-9fb8-a136955cd057")
                        });
                });

            modelBuilder.Entity("OrdersApp.Data.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61e01544-bbe2-4c35-97fd-8c0c4925ee7e"),
                            Date = new DateTime(2021, 5, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            Note = "Note 1",
                            UserId = new Guid("b364315c-3881-44d9-a498-fc74300cbd6c")
                        },
                        new
                        {
                            Id = new Guid("8f1feb6b-2048-4e92-b942-dc9aff802228"),
                            Date = new DateTime(2021, 5, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            Note = "Note 2",
                            UserId = new Guid("15a60132-90b9-4be9-b612-4585141ec1bb")
                        });
                });

            modelBuilder.Entity("OrdersApp.Data.Models.OrderItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ArticleId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c7895c1-d06d-4052-a0a2-b98fa3759c85"),
                            ArticleId = new Guid("4a28ecaf-47f2-402d-9b8d-27219ac807eb"),
                            OrderId = new Guid("61e01544-bbe2-4c35-97fd-8c0c4925ee7e"),
                            Price = 305m,
                            Quantity = 10
                        },
                        new
                        {
                            Id = new Guid("84b7f58b-a320-40f8-a401-6b538c05ac70"),
                            ArticleId = new Guid("4a28ecaf-47f2-402d-9b8d-27219ac807eb"),
                            OrderId = new Guid("8f1feb6b-2048-4e92-b942-dc9aff802228"),
                            Price = 345m,
                            Quantity = 10
                        });
                });

            modelBuilder.Entity("OrdersApp.Data.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b364315c-3881-44d9-a498-fc74300cbd6c"),
                            City = "City 1",
                            EmailAddress = "Email address 1",
                            FirstName = "User 1",
                            LastName = "User 1",
                            PhoneNumber = "Phone number 1",
                            State = "State 1",
                            Street = "Street 1",
                            ZipCode = "Zipcode 1"
                        },
                        new
                        {
                            Id = new Guid("15a60132-90b9-4be9-b612-4585141ec1bb"),
                            City = "City 2",
                            EmailAddress = "Email address 2",
                            FirstName = "User 2",
                            LastName = "User 2",
                            PhoneNumber = "Phone number 2",
                            State = "State 2",
                            Street = "Street 2",
                            ZipCode = "Zipcode 2"
                        });
                });

            modelBuilder.Entity("OrdersApp.Data.Models.MenuItem", b =>
                {
                    b.HasOne("OrdersApp.Data.Models.Article", "Article")
                        .WithMany("MenuItems")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrdersApp.Data.Models.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("OrdersApp.Data.Models.Order", b =>
                {
                    b.HasOne("OrdersApp.Data.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("OrdersApp.Data.Models.OrderItem", b =>
                {
                    b.HasOne("OrdersApp.Data.Models.Article", "Article")
                        .WithMany("OrderItems")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OrdersApp.Data.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("OrdersApp.Data.Models.Article", b =>
                {
                    b.Navigation("MenuItems");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("OrdersApp.Data.Models.Menu", b =>
                {
                    b.Navigation("MenuItems");
                });

            modelBuilder.Entity("OrdersApp.Data.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("OrdersApp.Data.Models.User", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
